{"version":3,"sources":["components/Profile/ProfleInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfleInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfleInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","value","ProfileInfo","profile","className","s","descriptionBlock","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","fullName","github","userId","mainLink","lookingForAJob","lookingForAJobDescription","src","photos","large","alt","Preloader","Post","item","message","likes","maxLength10","maxLengthCreator","MyPosts","React","memo","postsElements","posts","map","p","key","id","postsBlock","PostReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.d7360b5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"ProfileInfo_header__2kfaZ\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1VPfB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__THotT\",\"posts\":\"MyPosts_posts__3216f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1vNv3\"};","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => setEditMode(true);\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => setStatus(e.currentTarget.value);\r\n\r\n  return (\r\n    <>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || '-*-*-'}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onBlur={deactivateEditMode}\r\n            autoFocus={true}\r\n            onChange={onStatusChange}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <p>{profile.aboutMe}</p>\r\n        <p>{profile.contacts.facebook}</p>\r\n        <p>{profile.contacts.website}</p>\r\n        <p>{profile.contacts.vk}</p>\r\n        <p>{profile.contacts.twitter}</p>\r\n        <p>{profile.contacts.instagram}</p>\r\n        <p>{profile.contacts.youtube}</p>\r\n        <p>{profile.fullName.github}</p>\r\n        <p>{profile.userId.mainLink}</p>\r\n        <p>{profile.lookingForAJob ? 'Yes!' : 'No'}</p>\r\n        <p>{profile.lookingForAJobDescription}</p>\r\n        <img src={profile.photos.large} alt=''></img>\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://i.imgur.com/IzXy2T5g.jpg\" alt=\"\" />\r\n      {props.message}\r\n      <div>\r\n        <span>likes: {props.likes}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../helpers/validators';\r\nimport { Textarea } from '../../common/FormsControl/FormsControl';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post key={p.id} message={p.message} likes={p.likes} />\r\n  ));\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <PostReduxForm onSubmit={addNewPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name={'newPostText'}\r\n          placeholder={'Post message'}\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PostReduxForm = reduxForm({ form: 'ProfileAddNewPostForm' })(\r\n  AddNewPostForm\r\n);\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from './ProfleInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus\r\n} from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push('login');\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}