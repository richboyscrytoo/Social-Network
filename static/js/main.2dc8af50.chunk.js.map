{"version":3,"sources":["redux/dialogs-reducer.js","assets/images/user.png","components/Users/Users.module.css","assets/images/preloader.svg","api/api.js","components/Navbar/Navbar.module.css","components/Music/Music.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Settings/Settings.jsx","helpers/objects-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","components/hoc/withSuspense.js","App.js","serviceWorker.js","index.js","components/common/FormsControl/FormsControl.js","components/common/FormsControl/FormsControl.module.css","components/common/preloader/Preloader.js","components/common/Paginator/Paginator.module.css","helpers/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["initialState","dialogs","id","name","messages","message","addMessageActionCreator","newMessageText","type","dialogsReducer","state","action","newMessage","module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","unfollow","userId","delete","follow","post","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Music","props","Navbar","className","s","nav","item","to","activeClassName","activeLink","News","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollow","dispatch","apiMethod","actionCreator","a","data","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","selectedPage","pageNumber","key","User","user","src","photos","small","userPhoto","alt","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","Preloader","React","Component","compose","connect","bind","page","response","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","friends","img","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","then","MainApp","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","FormsControl","meta","touched","children","showError","formControl","Textarea","input","restprops","child","placeholder","validators","component","text","validate","style","backgroundColor","preloader","value","maxLengthCreator","maxLength","posts","likes","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.2dc8af50.chunk.js","sourcesContent":["const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 1, name: 'Vlad' },\r\n    { id: 2, name: 'Dima' },\r\n    { id: 3, name: 'Stas' },\r\n    { id: 4, name: 'Zhora' },\r\n    { id: 5, name: 'Victor' }\r\n  ],\r\n\r\n  messages: [\r\n    { id: 1, message: 'Hi' },\r\n    { id: 2, message: 'How is your day?' },\r\n    { id: 3, message: 'Yo' },\r\n    { id: 4, message: '???' },\r\n    { id: 5, message: 'I love you' }\r\n  ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE:\r\n      let newMessage = { id: 6, message: action.newMessageText };\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, newMessage]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addMessageActionCreator = (newMessageText) => ({\r\n  type: ADD_MESSAGE,\r\n  newMessageText\r\n});\r\n\r\nexport default dialogsReducer;\r\n","module.exports = __webpack_public_path__ + \"static/media/user.f8a15e74.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__15tk7\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.a7340b83.svg\";","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    'API-KEY': '076b0337-058a-45c7-afb3-fa0f2a59e73c'\r\n  }\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`);\r\n  },\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`, {});\r\n  },\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`, {});\r\n  }\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/${userId}`);\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/${userId}`);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, { status });\r\n  }\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, { email, password, rememberMe });\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`);\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__wBZCz\",\"item\":\"Navbar_item__2x0qA\",\"activeLink\":\"Navbar_activeLink__gvZwb\"};","import React from 'react';\r\n// import s from \"./Music.module.css\";\r\n\r\nconst Music = (props) => {\r\n  return <div>Music</div>;\r\n};\r\n\r\nexport default Music;\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n// import Friends from '../Friends/Friends';\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink to='/profile' activeClassName={s.activeLink}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/dialogs' activeClassName={s.activeLink}>\r\n          Messages\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/users' activeClassName={s.activeLink}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/news' activeClassName={s.activeLink}>\r\n          News\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/music' activeClassName={s.activeLink}>\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/settings' activeClassName={s.activeLink}>\r\n          Settings\r\n        </NavLink>\r\n      </div>\r\n      {/* <Friends friends={props.store.sidebar.friends} /> */}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n// import s from \"./News.module.css\";\r\n\r\nconst News = (props) => {\r\n  return <div>News</div>;\r\n};\r\n\r\nexport default News;\r\n","import React from 'react';\r\n// import s from \"./Settings.module.css\";\r\n\r\nconst Settings = (props) => {\r\n  return <div>Settings</div>;\r\n};\r\n\r\nexport default Settings;\r\n","export const updateObjectInArray = (\r\n  items,\r\n  itemId,\r\n  objPropName,\r\n  newObjProps\r\n) => {\r\n  return items.map((u) => {\r\n    if (u[objPropName] === itemId) {\r\n      return { ...u, ...newObjProps };\r\n    }\r\n    return u;\r\n  });\r\n};\r\n","import { usersAPI } from '../api/api';\r\nimport { updateObjectInArray } from '../helpers/objects-helpers';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', {\r\n          followed: true\r\n        })\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', {\r\n          followed: false\r\n        })\r\n      };\r\n    case SET_USERS:\r\n      return { ...state, users: action.users };\r\n    case SET_CURRENT_PAGE:\r\n      return { ...state, currentPage: action.currentPage };\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return { ...state, totalUsersCount: action.count };\r\n    case TOGGLE_IS_FETCHING:\r\n      return { ...state, isFetching: action.isFetching };\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : [state.followingInProgress.filter((id) => id !== action.userId)]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage\r\n});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  count: totalUsersCount\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  dispatch(setCurrentPage(page));\r\n\r\n  let response = await usersAPI.getUsers(page, pageSize);\r\n  dispatch(toggleIsFetching(false));\r\n  dispatch(setUsers(response.data.items));\r\n  dispatch(setTotalUsersCount(response.data.totalCount));\r\n};\r\n\r\nconst followUnfollow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  let response = await apiMethod(userId);\r\n  if (response.data.resultCode === 0) dispatch(actionCreator(userId));\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n  followUnfollow(\r\n    dispatch,\r\n    userId,\r\n    usersAPI.follow.bind(usersAPI),\r\n    followSuccess\r\n  );\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n  followUnfollow(\r\n    dispatch,\r\n    userId,\r\n    usersAPI.unfollow.bind(usersAPI),\r\n    unfollowSuccess\r\n  );\r\n};\r\n\r\nexport default usersReducer;\r\n","import React, { useState } from 'react';\r\nimport s from './Paginator.module.css';\r\n\r\nlet Paginator = ({\r\n  totalItemsCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChanged,\r\n  portionSize = 10\r\n}) => {\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={s.paginator}>\r\n      {portionNumber > 1 && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          Prev\r\n        </button>\r\n      )}\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <span\r\n              className={\r\n                ({ [s.selectedPage]: currentPage === p }, s.pageNumber)\r\n              }\r\n              key={p}\r\n              onClick={() => {\r\n                onPageChanged(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport userPhoto from './../../assets/images/user.png';\r\nimport s from './Users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\r\n  return (\r\n    <div>\r\n      <span>\r\n        <div>\r\n          <NavLink to={'/profile/' + user.id}>\r\n            <img\r\n              src={user.photos.small != null ? user.photos.small : userPhoto}\r\n              className={s.userPhoto}\r\n              alt=''\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {user.followed ? (\r\n            <button\r\n              disabled={followingInProgress.some((id) => id === user.id)}\r\n              onClick={() => unfollow(user.id)}\r\n            >\r\n              Unfollow\r\n            </button>\r\n          ) : (\r\n            <button\r\n              disabled={followingInProgress.some((id) => id === user.id)}\r\n              onClick={() => follow(user.id)}\r\n            >\r\n              Follow\r\n            </button>\r\n          )}\r\n        </div>\r\n      </span>\r\n      <span>\r\n        <span>\r\n          <div>{user.name}</div>\r\n          <div>{user.status}</div>\r\n        </span>\r\n        <span>\r\n          <div>{'u.location.country'}</div>\r\n          <div>{'u.location.city'}</div>\r\n        </span>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({\r\n  currentPage,\r\n  totalUsersCount,\r\n  pageSize,\r\n  onPageChanged,\r\n  users,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Paginator\r\n        currentPage={currentPage}\r\n        onPageChanged={onPageChanged}\r\n        totalItemsCount={totalUsersCount}\r\n        pageSize={pageSize}\r\n      />\r\n      {users.map((u) => (\r\n        <User\r\n          user={u}\r\n          followingInProgress={props.followingInProgress}\r\n          unfollow={props.unfollow}\r\n          follow={props.follow}\r\n          key={u.id}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getUsersSelector = (state) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n  return users.filter((u) => true);\r\n});\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  follow,\r\n  unfollow,\r\n  setCurrentPage,\r\n  toggleFollowingProgress,\r\n  requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport {\r\n  getPageSize,\r\n  getUsers,\r\n  getTotalUsersCount,\r\n  getCurrentPage,\r\n  getIsFetching,\r\n  getFollowingInProgress\r\n} from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    const { currentPage, pageSize } = this.props;\r\n    this.props.requestUsers(currentPage, pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    const { pageSize } = this.props;\r\n    this.props.requestUsers(pageNumber, pageSize);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          onPageChanged={this.onPageChanged}\r\n          users={this.props.users}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n          followingInProgress={this.props.followingInProgress}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  users: getUsers(state),\r\n  pageSize: getPageSize(state),\r\n  totalUsersCount: getTotalUsersCount(state),\r\n  currentPage: getCurrentPage(state),\r\n  isFetching: getIsFetching(state),\r\n  followingInProgress: getFollowingInProgress(state)\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n  })\r\n)(UsersContainer);\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <div>\r\n        <h1>\r\n          Not<span>Facebook</span>\r\n        </h1>\r\n      </div>\r\n      <div className={s.loginBlock}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            {props.login} - <button onClick={props.logout}>Log Out</button>\r\n          </div>\r\n        ) : (\r\n          <NavLink to={'/login'}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { authAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  payload: { userId, email, login, isAuth }\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let response = await authAPI.me();\r\n  if (response.data.resultCode === 0) {\r\n    let { id, email, login } = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  let response = await authAPI.login(email, password, rememberMe);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData());\r\n  } else {\r\n    let message =\r\n      response.data.messages.length > 0\r\n        ? response.data.messages[0]\r\n        : 'Some error';\r\n    dispatch(stopSubmit('login', { _error: message }));\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  let response = await authAPI.logout();\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from './../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Input, createField } from '../common/FormsControl/FormsControl';\r\nimport { required } from '../../helpers/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from '../common/FormsControl/FormsControl.module.css';\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {createField('Email', 'email', [required], Input)}\r\n      {createField('Password', 'password', [required], Input, {\r\n        type: 'password'\r\n      })}\r\n      {createField(\r\n        null,\r\n        'rememberMe',\r\n        [],\r\n        Input,\r\n        { type: 'checkbox' },\r\n        'remember me'\r\n      )}\r\n      {error && <div className={s.formSummaryError}>{error}</div>}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe);\r\n  };\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={'/profile'} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ isAuth: state.auth.isAuth });\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import { getAuthUserData } from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n  initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  promise.then(() => {\r\n    dispatch(initializedSuccess());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","let initialState = {\r\n  friends: [\r\n    {\r\n      id: 1,\r\n      name: 'Vlad',\r\n      img: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Dima',\r\n      img:\r\n        'https://cdn.pixabay.com/photo/2015/06/19/21/24/the-road-815297__340.jpg'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Zhora',\r\n      img: 'https://cdn.eso.org/images/thumb300y/eso1907a.jpg'\r\n    }\r\n  ]\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n  return state;\r\n};\r\n\r\nexport default sidebarReducer;\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React, { Suspense } from 'react';\r\n\r\nexport const withSuspense = (Component) => (props) => (\r\n  <Suspense fallback={<div>Loading...</div>}>\r\n    <Component {...props} />\r\n  </Suspense>\r\n);\r\n","import React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport './App.css';\nimport Music from './components/Music/Music';\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News';\nimport Settings from './components/Settings/Settings';\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\n// import ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { initializeApp } from './redux/app-reducer';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport Preloader from './components/common/preloader/Preloader';\nimport store from './redux/redux-store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { withSuspense } from './components/hoc/withSuspense';\n\nconst DialogsContainer = React.lazy(() =>\n  import('./components/Dialogs/DialogsContainer')\n);\n\nconst ProfileContainer = React.lazy(() =>\n  import('./components/Profile/ProfileContainer')\n);\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />;\n    }\n    return (\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Route path='/dialogs' render={withSuspense(DialogsContainer)} />\n          <Route\n            path='/profile/:userId?'\n            render={withSuspense(ProfileContainer)}\n          />\n          <Route path='/users' render={() => <UsersContainer />} />\n          <Route path='/login' render={() => <Login />} />\n          <Route path='/news' render={() => <News />} />\n          <Route path='/music' render={() => <Music />} />\n          <Route path='/settings' render={() => <Settings />} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ initialized: state.app.initialized });\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n\nconst MainApp = (props) => {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  );\n};\n\nexport default MainApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<MainApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport s from './FormsControl.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormsControl = ({ meta: { touched, error }, children }) => {\r\n  const showError = touched && error;\r\n  return (\r\n    <div className={s.formControl + ' ' + (showError ? s.error : '')}>\r\n      <div>{children}</div>\r\n      <div>{showError && <span>{error}</span>}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restprops } = props;\r\n  return (\r\n    <FormsControl {...props}>\r\n      <textarea {...input} {...restprops} />\r\n    </FormsControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restprops } = props;\r\n  return (\r\n    <FormsControl {...props}>\r\n      <input {...input} {...restprops} />\r\n    </FormsControl>\r\n  );\r\n};\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validators,\r\n  component,\r\n  props = {},\r\n  text = ''\r\n) => (\r\n  <div>\r\n    <Field\r\n      placeholder={placeholder}\r\n      name={name}\r\n      validate={validators}\r\n      component={component}\r\n      {...props}\r\n    />\r\n    {text}\r\n  </div>\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__20rZS\",\"error\":\"FormsControl_error__1wE5d\",\"formSummaryError\":\"FormsControl_formSummaryError__3NW8X\"};","import React from 'react';\r\nimport preloader from './../../../assets/images/preloader.svg';\r\n\r\nlet Preloader = (props) => {\r\n  return (\r\n    <div style={{ backgroundColor: '#fff' }}>\r\n      <img src={preloader} alt='' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2qMCT\",\"pageNumber\":\"Paginator_pageNumber__BG04i\",\"selectedPage\":\"Paginator_selectedPage__-bGn9\"};","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength)\r\n    return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Pgw6\",\"loginBlock\":\"Header_loginBlock__t2RWO\"};","import { profileAPI } from '../api/api';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, message: 'Hi, how are you?', likes: 10 },\r\n    { id: 2, message: 'It`s my first post', likes: 15 }\r\n  ],\r\n  profile: null,\r\n  status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      let newPost = { id: 5, message: action.newPostText, likes: 0 };\r\n      return { ...state, newPostText: '', posts: [...state.posts, newPost] };\r\n    case SET_USER_PROFILE:\r\n      return { ...state, profile: action.profile };\r\n    case SET_STATUS:\r\n      return { ...state, status: action.status };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((p) => p.id !== action.postId)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({\r\n  type: ADD_POST,\r\n  newPostText\r\n});\r\nexport const setUserProfile = (profile) => ({\r\n  type: SET_USER_PROFILE,\r\n  profile\r\n});\r\n\r\nexport const setStatus = (status) => ({\r\n  type: SET_STATUS,\r\n  status\r\n});\r\n\r\nexport const deletePost = (postId) => ({\r\n  type: DELETE_POST,\r\n  postId\r\n});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getProfile(userId);\r\n  dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getStatus(userId);\r\n  dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateStatus(status);\r\n  if (response.data.resultCode === 0) dispatch(setStatus(status));\r\n};\r\n\r\nexport default profileReducer;\r\n"],"sourceRoot":""}