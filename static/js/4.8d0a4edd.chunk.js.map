{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","activeClassName","s","activeLink","className","link","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageText","mapStateToPropsRedirect","auth","compose","connect","dispatch","actions","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,SAAW,0BAA0B,IAAM,uB,oBCAlLD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,WAAa,kC,iHCejDC,EAZI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,6BACE,kBAAC,IAAD,CAASC,gBAAiBC,IAAEC,WAAYC,UAAWF,IAAEG,KAAMC,GAAIP,GAC5DD,EAAMS,QCHAC,EAJC,SAACV,GACf,OAAO,yBAAKM,UAAWF,IAAEO,SAAUX,EAAMW,U,yCCiCrCC,EAAcC,YAAiB,IAmB/BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAlBL,SAACf,GACtB,OACE,0BAAMiB,SAAUjB,EAAMkB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAM,iBACNe,YAAY,wBAGhB,6BACE,+CAUOC,EAnDC,SAACzB,GACf,IAAI0B,EAAQ1B,EAAM2B,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OACtC,kBAAC,EAAD,CAAYC,IAAKD,EAAE7B,GAAIA,GAAI6B,EAAE7B,GAAIO,KAAMsB,EAAEtB,UAGvCwB,EAAmBP,EAAMQ,SAASJ,KAAI,SAACK,GAAD,OACxC,kBAAC,EAAD,CAASH,IAAKG,EAAEjC,GAAIA,GAAIiC,EAAEjC,GAAIS,QAASwB,EAAExB,aAO3C,OAAKX,EAAMoC,OAGT,6BACE,yBAAK9B,UAAWF,IAAEyB,SAChB,yBAAKvB,UAAWF,IAAEiC,cAAeT,GACjC,yBAAKtB,UAAWF,IAAE8B,UAChB,6BAAMD,KAGV,kBAACnB,EAAD,CAAqBG,SAdH,SAACqB,GACrBtC,EAAMuC,YAAYD,EAAOE,oBAGD,kBAAC,IAAD,CAAUhC,GAAI,Y,wCCnBtCiC,EAA0B,SAACf,GAAD,MAAY,CAAEU,OAAQV,EAAMgB,KAAKN,S,OCYhDO,sBACbC,aAXsB,SAAClB,GAAD,MAAY,CAAEC,YAAaD,EAAMC,gBAE9B,SAACkB,GAC1B,MAAO,CACLN,YAAa,SAACC,GACZK,EAASC,IAAQC,wBAAwBP,UDLf,SAACQ,GAAe,IACxCC,EADuC,uKAGzC,OAAKC,KAAKlD,MAAMoC,OAET,kBAACY,EAAcE,KAAKlD,OAFI,kBAAC,IAAD,CAAUQ,GAAG,eAHH,GACb2C,IAAMH,WAYtC,OAJiCJ,YAAQH,EAARG,CAC/BK,KCAWN,CAGblB","file":"static/js/4.8d0a4edd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2FhLS\",\"dialogsItems\":\"Dialogs_dialogsItems__MgxZA\",\"messages\":\"Dialogs_messages__3v5wM\",\"textarea\":\"Dialogs_textarea__6TLSQ\",\"btn\":\"Dialogs_btn__1jIoz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"DialogsItem_link__1_J9o\",\"activeLink\":\"DialogsItem_activeLink__xPAEz\"};","import React from \"react\";\nimport s from \"./DialogsItem.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n  let path = \"/dialogs/\" + props.id;\n\n  return (\n    <div>\n      <NavLink activeClassName={s.activeLink} className={s.link} to={path}>\n        {props.name}\n      </NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\n\nconst Message = (props) => {\n  return <div className={s.message}>{props.message}</div>;\n};\n\nexport default Message;\n","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Redirect } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { Textarea } from '../common/FormsControl/FormsControl';\nimport { required, maxLengthCreator } from '../../helpers/validators';\n\nconst Dialogs = (props) => {\n  let state = props.dialogsPage;\n  let dialogsElements = state.dialogs.map((d) => (\n    <DialogItem key={d.id} id={d.id} name={d.name} />\n  ));\n\n  let messagesElements = state.messages.map((m) => (\n    <Message key={m.id} id={m.id} message={m.message} />\n  ));\n\n  const addNewMessage = (values) => {\n    props.sendMessage(values.newMessageText);\n  };\n\n  if (!props.isAuth) return <Redirect to={'/login'} />;\n\n  return (\n    <div>\n      <div className={s.dialogs}>\n        <div className={s.dialogsItems}>{dialogsElements}</div>\n        <div className={s.messages}>\n          <div>{messagesElements}</div>\n        </div>\n      </div>\n      <AddMessageFormRedux onSubmit={addNewMessage} />\n    </div>\n  );\n};\nconst maxLength50 = maxLengthCreator(50);\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={Textarea}\n          validate={[required, maxLength50]}\n          name={'newMessageText'}\n          placeholder='Enter your message'\n        />\n      </div>\n      <div>\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(\n  AddMessageForm\n);\n\nexport default Dialogs;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsRedirect = (state) => ({ isAuth: state.auth.isAuth });\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to='/login' />;\n\n      return <Component {...this.props} />;\n    }\n  }\n\n  let ConnectedRedirectComponent = connect(mapStateToPropsRedirect)(\n    RedirectComponent\n  );\n\n  return ConnectedRedirectComponent;\n};\n","import { actions } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nconst mapStateToProps = (state) => ({ dialogsPage: state.dialogsPage });\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageText) => {\n      dispatch(actions.addMessageActionCreator(newMessageText));\n    }\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}