{"version":3,"sources":["components/Profile/ProfleInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfleInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfleInfo/ProfileDataForm.jsx","components/Profile/ProfleInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","value","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","sq","formSummaryError","createField","Input","Textarea","type","Object","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","userPhoto","alt","target","files","length","initialValues","formData","then","Post","item","message","likes","maxLength10","maxLengthCreator","MyPosts","React","memo","postsElements","posts","p","id","postsBlock","PostReduxForm","values","addPost","newPostText","Field","component","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","actions","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.19e0a5ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"ProfileInfo_header__3a90Y\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1i_kZ\",\"contact\":\"ProfileInfo_contact__3XN3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__A4YbA\",\"posts\":\"MyPosts_posts__2lztt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1vXd4\"};","import React, { useState, useEffect } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => setEditMode(true);\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n  const onStatusChange = (e) => setStatus(e.currentTarget.value);\n\n  return (\n    <>\n      {!editMode && (\n        <div>\n          <b>Status:</b>{' '}\n          <span onDoubleClick={activateEditMode}>\n            {props.status || '-*-*-'}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            onBlur={deactivateEditMode}\n            autoFocus={true}\n            onChange={onStatusChange}\n            value={status}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from 'react';\nimport {\n  createField,\n  Input,\n  Textarea\n} from '../../common/FormsControl/FormsControl';\nimport { reduxForm } from 'redux-form';\nimport s from './ProfileInfo.module.css';\nimport sq from '../../common/FormsControl/FormsControl.module.css';\n\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <button>save</button>\n      </div>\n      {error && <div className={sq.formSummaryError}>{error}</div>}\n      <div>\n        <b>Full Name:</b> {createField('Full Name', 'fullName', [], Input)}\n      </div>\n      <div>\n        <b>About me:</b> {createField('About me', 'aboutMe', [], Textarea)}\n      </div>\n      <div>\n        <b>Looking for a job:</b>{' '}\n        {createField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}\n      </div>\n      <div>\n        <b>My professional skills:</b>{' '}\n        {createField(\n          'My professional skills',\n          'lookingForAJobDescription',\n          [],\n          Textarea\n        )}\n      </div>\n      <div>\n        <b>Contacts:</b>{' '}\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <div key={key} className={s.contact}>\n              <b>\n                {key}: {createField(key, 'contacts.' + key, [], Input)}\n              </b>\n            </div>\n          );\n        })}\n      </div>\n    </form>\n  );\n};\n\nconst ProfileDataFormReduxForm = reduxForm({ form: 'editProfile' })(\n  ProfileDataForm\n);\n\nexport default ProfileDataFormReduxForm;\n","import React, { useState } from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from '../../common/preloader/Preloader';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport userPhoto from '../../../assets/images/user.png';\nimport ProfileDataForm from './ProfileDataForm';\n\nconst ProfileInfo = ({\n  profile,\n  status,\n  updateStatus,\n  isOwner,\n  savePhoto,\n  saveProfile\n}) => {\n  const [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  };\n\n  const onSubmit = (formData) => {\n    saveProfile(formData).then(() => {\n      setEditMode(false);\n    });\n  };\n\n  return (\n    <div>\n      <div className={s.descriptionBlock}>\n        <img src={profile.photos.large || userPhoto} alt=''></img>\n        {isOwner && (\n          <input type={'file'} onChange={onMainPhotoSelected}></input>\n        )}\n        {editMode ? (\n          <ProfileDataForm\n            initialValues={profile}\n            profile={profile}\n            onSubmit={onSubmit}\n          />\n        ) : (\n          <ProfileData\n            profile={profile}\n            isOwner={isOwner}\n            goToEditMode={() => {\n              setEditMode(true);\n            }}\n          />\n        )}\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n      </div>\n    </div>\n  );\n};\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n  return (\n    <div>\n      {isOwner && (\n        <div>\n          <button onClick={goToEditMode}>edit</button>\n        </div>\n      )}\n      <div>\n        <b>Full Name:</b> {profile.fullName}\n      </div>\n      <div>\n        <b>About me:</b> {profile.aboutMe}\n      </div>\n      <div>\n        <b>Looking for a job:</b> {profile.lookingForAJob ? 'Yes!' : 'No'}\n      </div>\n      {profile.lookingForAJob && (\n        <div>\n          <b>Job Description:</b> {profile.lookingForAJobDescription}\n        </div>\n      )}\n      <div>\n        <b>Contacts:</b>{' '}\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <Contact\n              key={key}\n              contactTitle={key}\n              contactValue={profile.contacts[key]}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst Contact = ({ contactTitle, contactValue }) => {\n  return (\n    <div className={s.contact}>\n      <b>{contactTitle}:</b>\n      {contactValue}\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport s from \"./Post.module.css\";\n\nconst Post = (props) => {\n  return (\n    <div className={s.item}>\n      <img src=\"https://i.imgur.com/IzXy2T5g.jpg\" alt=\"\" />\n      {props.message}\n      <div>\n        <span>likes: {props.likes}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form';\nimport { required, maxLengthCreator } from '../../../helpers/validators';\nimport { Textarea } from '../../common/FormsControl/FormsControl';\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPosts = React.memo((props) => {\n  let postsElements = props.posts.map((p) => (\n    <Post key={p.id} message={p.message} likes={p.likes} />\n  ));\n\n  let addNewPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n\n  return (\n    <div className={s.postsBlock}>\n      <h3>My posts</h3>\n      <PostReduxForm onSubmit={addNewPost} />\n      <div className={s.posts}>{postsElements}</div>\n    </div>\n  );\n});\n\nconst AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={Textarea}\n          name={'newPostText'}\n          placeholder={'Post message'}\n          validate={[required, maxLength10]}\n        />\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  );\n};\n\nconst PostReduxForm = reduxForm({ form: 'ProfileAddNewPostForm' })(\n  AddNewPostForm\n);\nexport default MyPosts;\n","import { actions } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(actions.addPostActionCreator(newPostText));\n    }\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React, { FC } from 'react';\nimport ProfileInfo from './ProfleInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport { ProfileType } from '../../types/types';\n\ntype PropsType = {\n  isOwner: boolean;\n  profile: ProfileType;\n  status: string;\n  savePhoto: () => void;\n  updateStatus: () => void;\n  saveProfile: () => void;\n};\n\nconst Profile: FC<PropsType> = ({\n  isOwner,\n  profile,\n  status,\n  savePhoto,\n  updateStatus,\n  saveProfile\n}) => {\n  return (\n    <div>\n      <ProfileInfo\n        isOwner={isOwner}\n        profile={profile}\n        status={status}\n        savePhoto={savePhoto}\n        updateStatus={updateStatus}\n        saveProfile={saveProfile}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport {\n  getUserProfile,\n  getStatus,\n  updateStatus,\n  savePhoto,\n  saveProfile\n} from '../../redux/profile-reducer';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push('login');\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        isOwner={!this.props.match.params.userId}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n        savePhoto={this.props.savePhoto}\n      />\n    );\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(\n  connect(mapStateToProps, {\n    getUserProfile,\n    getStatus,\n    updateStatus,\n    savePhoto,\n    saveProfile\n  }),\n  withRouter\n)(ProfileContainer);\n"],"sourceRoot":""}